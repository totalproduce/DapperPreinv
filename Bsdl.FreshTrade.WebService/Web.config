<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
     <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>

  <appSettings>
    <add key="bsdl.siteConnectionsFileLocation" value="U:\Sources\Bsdl.FreshTrade\Bsdl.FreshTrade.WebService\connection.txt" />
    <add key="PreInvLockSalesOffice" value="true" />
    <add key="RecordData" value="false"/>
  </appSettings>

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <extensions>
      <add assembly="NLog.Extended" />
    </extensions>
    <variable name="logsDir" value="C:/Logs/IIS/TotalProduce" />
    <variable name="logLinePrefix" value="[${date:universalTime=true:format=yyyy-MM-ddTHH\:mm\:ss\.fff}] ${threadid:padding=-3} ${level:upperCase=true:padding=-5} ${logger}>" />
    <variable name="logException" value="${onexception:${newline}EXCEPTION OCCURED:${newline}${exception:format=tostring:innerFormat=tostring:maxInnerExceptionLevel=20}}" />
    <targets async="true">
      <target name="commonDebug" xsi:type="File" fileName="${logsDir}/CommonLogsDir/${date:format=yyyy_MM}/${date:format=dd}/PreInvLog_${date:format=yyyyMMdd_HH_mm_ss}_${threadid}.log" layout="${logLinePrefix}${message}" archiveAboveSize="10485760" maxArchiveFiles="100" />
      <target name="commonInfo" xsi:type="File" fileName="${logsDir}/CommonLogsDir/${date:format=yyyy_MM}/${date:format=dd}/Info.log" layout="${logLinePrefix}${message}" archiveAboveSize="10485760" maxArchiveFiles="100" />
      <target name="commonError" xsi:type="File" fileName="${logsDir}/CommonLogsDir/${date:format=yyyy_MM}/${date:format=dd}/Error.log" layout="${logLinePrefix}${message}" archiveAboveSize="10485760" maxArchiveFiles="100" />
      <target name="commonException" xsi:type="File" fileName="${logsDir}/CommonLogsDir/${date:format=yyyy_MM}/${date:format=dd}/Exception.log" layout="${logLinePrefix}${message} ${logException}" archiveAboveSize="10485760" maxArchiveFiles="100" />
      <target name="commonFatal" xsi:type="File" fileName="${logsDir}/CommonLogsDir/${date:format=yyyy_MM}/${date:format=dd}/Fatal.log" layout="${logLinePrefix}${message}" archiveAboveSize="10485760" maxArchiveFiles="100" />
    </targets>
    <rules>
      <logger name="*" minlevel="Debug" writeTo="commonDebug" />
      <logger name="*" minlevel="Info" writeTo="commonInfo" />
      <logger name="*" minlevel="Error" writeTo="commonError" />
      <logger name="*" minlevel="Error" condition="length('${exception}') == 0" action="Ignore" writeTo="commonException" />
      <logger name="*" minlevel="Fatal" writeTo="commonFatal" />
    </rules>
  </nlog>

  <connectionStrings>
    <add name="Elmah" connectionString="data source=~/Logs/ErrorLog.db" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <!--<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />-->
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
    </httpModules>
  </system.web>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="NoAuthentication" allowCookies="false" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647">
          <security mode="Message">
            <message establishSecurityContext="true" />
          </security>
          <readerQuotas maxArrayLength="656000" maxBytesPerRead="656000" maxDepth="32" maxNameTableCharCount="656000" maxStringContentLength="656000"/>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="wsServiceBehavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.Basic.Users.UserService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.Basic.Interfaces.IUserService" />
      </service>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.Basic.Dictionary.DictionaryService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.Basic.Interfaces.IDictionaryService" />
      </service>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.Account.Accounts.AccountsService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.Account.Interfaces.IAccountsService"/>
      </service>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.Account.SalesOffices.SalesOfficesService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.Account.Interfaces.ISalesOfficesService"/>
      </service>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.Account.Customer.CustomerService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.Account.Interfaces.ICustomerService"/>
      </service>
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.PreInv.Services.PreInvService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.PreInv.Interfaces.IPreInvService"/>
      </service>      
      <service behaviorConfiguration="wsServiceBehavior" name="Bsdl.FreshTrade.Services.PreInv.Reports.Services.PreInvReportService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="NoAuthentication" contract="Bsdl.FreshTrade.Services.PreInv.Reports.Interfaces.IPreInvReportService"/>
      </service>      
    </services>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  <elmah>
    <!--
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on remote access and securing ELMAH.
    -->
    <security allowRemoteAccess="true" />
    <errorLog type="Elmah.SQLiteErrorLog, Elmah" connectionStringName="Elmah" />
    <errorMail from="test@test.com" to="support@test.com"  async="true" 
               subject="[PreInv][SERVER_NAME]{0}"
               smtpServer="127.0.0.1" /> <!-- smtpPort="25" userName="..." password="..." -->
</elmah>
  <location path="elmah.axd" inheritInChildApplications="false">
    <system.web>
      <httpHandlers>
        <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      </httpHandlers>
      <!-- 
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on using ASP.NET authorization securing ELMAH.

      <authorization>
        <allow roles="admin" />
        <deny users="*" />  
      </authorization>
      -->
    </system.web>
    <system.webServer>
      <handlers>
        <add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      </handlers>
    </system.webServer>
  </location>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Data.SQLite" publicKeyToken="db937bc2d44ff139" culture="neutral" />
        <bindingRedirect oldVersion="1.0.61.0" newVersion="1.0.93.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>