DECLARE
  I_Valid NUMBER(10);
  I_FormNo NUMBER(10);
  I_InsertFrmName NUMBER(10);
  I_EditFrmName NUMBER(10);
  I_CheckFormNo NUMBER(10);
  S_FormName CHAR(20);
  S_FormTitle CHAR(100);
  S_VersionNo CHAR(10);
  S_CheckFormName CHAR(20);
  S_FormType CHAR(10);

BEGIN
  -- Autogenerated from BSDL FormTCS program

  -- Initialise the variables
  I_Valid := 1;
  I_InsertFrmName := 0;
  I_EditFrmName := 0;

  S_FormName := TRIM(UPPER('PREINV_NEW'));
  S_FormTitle := TRIM('Sales Pre-Invoicing Report');
  S_VERSIONNO := TRIM(UPPER('11.1'));
  I_FormNo := 10009;
  S_FormType := 1;

  -- Check to see if the form name already exist in FrmName
  IF I_Valid = 1 THEN
  BEGIN
    SELECT NVL(FormNo, 0) INTO I_CheckFormNo
    FROM FrmName
    WHERE UPPER(RTRIM(FormName)) = RTRIM(S_FormName);

    EXCEPTION
      WHEN OTHERS THEN
        I_CheckFormNo := 0;
  END;
  END IF;

  IF I_Valid = 1 THEN
  BEGIN
    IF NVL(I_CheckFormNo, 0) = 0 THEN
    BEGIN
        -- Record does not exist - insert
        I_InsertFrmName := 1;
    END;
    ELSE
    BEGIN
      -- Live form already exists, with different number - abort
      IF I_CheckFormNo <> I_FormNo THEN
      BEGIN
          I_Valid := 0;
          RAISE_APPLICATION_ERROR (-20001, TRIM(S_FormName) || ' already exists in FrmName as FormNo ' || TO_CHAR(I_CheckFormNo));
      END;
      END IF;
    END;
    END IF;
  END;
  END IF;

  -- Check to see if the form number already exists in FrmName
  IF I_Valid = 1 THEN
  BEGIN
    SELECT FormName INTO S_CheckFormName
    FROM FrmName
    WHERE FormNo = I_FormNo;

    EXCEPTION
      WHEN OTHERS THEN
        S_CheckFormName := NULL;
  END;
  END IF;

  IF I_Valid = 1 THEN
  BEGIN
    IF S_CheckFormName IS NOT NULL THEN
    BEGIN
      IF UPPER(RTRIM(S_CheckFormName)) <> UPPER(RTRIM(S_FormName)) THEN
      BEGIN
        I_Valid := 0;
        RAISE_APPLICATION_ERROR (-20001, 'Form No ' || TO_CHAR(I_FormNo) || ' has already been assigned to ' || TRIM
(S_CheckFormName));
      END;
      ELSE
      BEGIN
        I_EditFrmName := 1;
      END;
      END IF;
    END;
    END IF;
  END;
  END IF;

  -- Insert the new FrmName
  IF I_Valid = 1 THEN
  BEGIN
    IF I_InsertFrmName = 1 THEN
    BEGIN
      INSERT INTO FrmName
      (FormName, FormNo, FormTit, PrimaryForm)
      VALUES(S_FormName, I_FormNo, S_FormTitle, S_FormType);

      EXCEPTION
        WHEN OTHERS THEN
	      RAISE_APPLICATION_ERROR(-20001, 'Cannot Insert FrmName');
          I_Valid := 0;
    END;
    ELSE
    BEGIN
      IF I_EditFrmName = 1 THEN
      BEGIN
         UPDATE FrmName
	    SET FormTit = S_FormTitle,
	        PrimaryForm = S_FormType
            WHERE
	        FormNo =   I_FormNo;
         EXCEPTION
            WHEN OTHERS THEN
	      RAISE_APPLICATION_ERROR(-20001, 'Cannot Update FrmName');
            I_Valid := 0;
      END;
      END IF;
    END;
    END IF;
  END;
  END IF;

  -- Delete any existing FormTCS
  IF I_Valid = 1 THEN
  BEGIN
    DELETE FROM FormTCS
    WHERE FormNo = I_FormNo
      AND UPPER(RTRIM(VersionNo)) = RTRIM(S_VersionNo);

    EXCEPTION
      WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'Problem Deleting old FormTCS');
        I_Valid := 0;
  END;
  END IF;

  IF I_Valid = 1 THEN
     COMMIT;
  ELSE
     ROLLBACK;
  END IF;

END;
